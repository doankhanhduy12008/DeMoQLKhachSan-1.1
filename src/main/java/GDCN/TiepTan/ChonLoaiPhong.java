/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GDCN.TiepTan;

import Dao.dao.LoaiPhongDao;
import Dao.dao.PhongDao;
import Dao.daoimpl.LoaiPhongDaoImpl;
import Dao.daoimpl.PhongDaoImpl;
import Dao.entity.LoaiPhong;
import Dao.entity.Phong;
import Util.XAuth;
import Util.XDialog;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;

/**
 *
 * @author Acer
 */
public class ChonLoaiPhong extends javax.swing.JDialog implements ChonLoaiPhongController{
private Phong phongDaChon = null;
    /**
     * Creates new form ChonLoaiPhong
     */
    public ChonLoaiPhong(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        
            cboLoaiPhong.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cboLoaiPhongActionPerformed(evt);
        }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pnlPhong = new javax.swing.JPanel();
        cboLoaiPhong = new javax.swing.JComboBox<>();
        txtTimKiemP = new javax.swing.JTextField();
        btnTimKiemP = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jScrollPane2.setBorder(null);

        pnlPhong.setBackground(new java.awt.Color(255, 255, 255));
        pnlPhong.setLayout(new java.awt.GridLayout(0, 6, 5, 5));
        jScrollPane2.setViewportView(pnlPhong);

        cboLoaiPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnTimKiemP.setText("Tìm kiếm");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(cboLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTimKiemP)
                .addGap(18, 18, 18)
                .addComponent(txtTimKiemP, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiemP, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiemP, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.open();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChonLoaiPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChonLoaiPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChonLoaiPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChonLoaiPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChonLoaiPhong dialog = new ChonLoaiPhong(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
            });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnTimKiemP;
    private javax.swing.JComboBox<String> cboLoaiPhong;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlPhong;
    private javax.swing.JTextField txtTimKiemP;
    // End of variables declaration//GEN-END:variables

@Override
public void showThemPhong(int Id) {
    
}
@Override
public void open() {
    this.setLocationRelativeTo(null);
    pnlPhong.setLayout(new java.awt.GridLayout(0, 6, 5, 5)); // Đảm bảo layout cho pnlPhong
    loadAllRoomsToPanel();
    fillComboBoxLoaiPhong();
}

private void loadAllRoomsToPanel() {
    PhongDao phongDao = new PhongDaoImpl();
    List<Phong> allRooms = phongDao.findAll();
    pnlPhong.removeAll();

    for (Phong p : allRooms) {
        JButton btn = createRoomButton(p);
        pnlPhong.add(btn);
    }

    pnlPhong.revalidate();
    pnlPhong.repaint();
}

private JButton createRoomButton(Phong p) {
    LoaiPhongDao loaiPhongDao = new LoaiPhongDaoImpl();
    LoaiPhong loaiPhong = loaiPhongDao.findById(p.getIdLoaiPhong());
    String tenLoaiPhong = (loaiPhong != null) ? loaiPhong.getTenLoaiPhong() : "Không xác định";

    String buttonText = "<html><center>"
                      + "Phòng " + p.getSoPhong() + "<br>"
                      + "Tầng: " + p.getTang() + "<br>"
                      + "Loại: " + tenLoaiPhong + "<br>"
                      + "(" + p.getTrangThai() + ")"
                      + "</center></html>";

    JButton btn = new JButton(buttonText);
    btn.setPreferredSize(new Dimension(100, 80));
    btn.setActionCommand(String.valueOf(p.getId()));

    if ("Trống".equals(p.getTrangThai())) {
        btn.setBackground(Color.GREEN);
        btn.addActionListener(e -> {
            int idPhong = Integer.parseInt(e.getActionCommand());
            PhongDao dao = new PhongDaoImpl();
            Phong selected = dao.findById(idPhong);

            if (selected != null) {
                selected.setTrangThai("Đang sử dụng");
                dao.update(selected);
                this.phongDaChon = selected;
                this.dispose(); // Đóng dialog sau khi chọn
            }
        });
    } else if ("Đang sử dụng".equals(p.getTrangThai())) {
        btn.setBackground(Color.RED);
        btn.addActionListener(e -> XDialog.alert("Phòng này đã có người thuê, vui lòng chọn phòng khác!"));
    } else if ("Đang dọn".equals(p.getTrangThai())) {
        btn.setBackground(Color.YELLOW);
        btn.addActionListener(e -> XDialog.alert("Phòng này đang được dọn dẹp!"));
    } else {
        btn.setBackground(Color.PINK);
        btn.setEnabled(false);
    }
    return btn;
}

    public Phong getSelectedPhong() {
        return this.phongDaChon;
    }
    
    LoaiPhongDao loaiPhongDao = new LoaiPhongDaoImpl();

// Thêm phương thức này vào trong lớp TrangChuTT
private void fillComboBoxLoaiPhong() {
    DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiPhong.getModel();
    model.removeAllElements();
    model.addElement("Tất cả"); // Thêm mục để hiển thị tất cả các phòng
    try {
        List<LoaiPhong> list = loaiPhongDao.findAll();
        for (LoaiPhong lp : list) {
            model.addElement(lp);
        }
    } catch (Exception e) {
        XDialog.alert("Lỗi truy vấn dữ liệu loại phòng!");
    }
}


// Thêm phương thức này để lọc phòng theo loại phòng
private void loadRoomsByLoaiPhong(int idLoaiPhong) {
    pnlPhong.removeAll();
    PhongDao phongDao = new PhongDaoImpl();
    List<Phong> rooms = phongDao.findByIdLoaiPhong(idLoaiPhong);
    for (Phong p : rooms) {
        JButton btn = createRoomButton(p);
        pnlPhong.add(btn);
    }
    pnlPhong.revalidate();
    pnlPhong.repaint();
}



// Thêm phương thức xử lý sự kiện cboLoaiPhongActionPerformed
private void cboLoaiPhongActionPerformed(java.awt.event.ActionEvent evt) {
    Object selectedItem = cboLoaiPhong.getSelectedItem();
    if (selectedItem == null) {
        return;
    }
    if (selectedItem.toString().equals("Tất cả")) {
        loadAllRoomsToPanel();
    } else {
        LoaiPhong selectedLoaiPhong = (LoaiPhong) selectedItem;
        loadRoomsByLoaiPhong(selectedLoaiPhong.getId());
    }
}
}

