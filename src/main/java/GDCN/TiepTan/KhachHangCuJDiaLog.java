/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GDCN.TiepTan;

import Dao.dao.KhachHangDao;
import Dao.daoimpl.KhachHangDaoImpl;
import Dao.entity.KhachHang;
import Util.XDialog;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Acer
 */
public class KhachHangCuJDiaLog extends javax.swing.JDialog {

    /**
     * Creates new form KhachHangCuJDiaLog
     */
    private KhachHang selectedKhachHang = null;
    private TrangChuTT trangChu;

    public KhachHangCuJDiaLog(java.awt.Frame parent, boolean modal) {
      super(parent, modal);
    this.trangChu = (TrangChuTT) parent; // <-- Thêm dòng này
    initComponents();
    fillTableKhachHang();
    setLocationRelativeTo(null);
     txtTimKiemKH.addKeyListener(new KeyAdapter() {
        @Override
        public void keyReleased(KeyEvent e) {
            timKiemKH();
        }
    });
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        tabKhachHang = new javax.swing.JTable();
        txtTimKiemKH = new javax.swing.JTextField();
        btnTimKiemKH = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Khách Hàng", "Số cmt", "Số điện thoại"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabKhachHangMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabKhachHang);

        btnTimKiemKH.setText("Tìm kiếm");
        btnTimKiemKH.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTimKiemKH)
                .addGap(18, 18, 18)
                .addComponent(txtTimKiemKH, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTimKiemKH, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(btnTimKiemKH, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabKhachHangMouseClicked
        // TODO add your handling code here:
 if (evt.getClickCount() == 2) { // Kiểm tra nhấp đúp chuột
        int row = tabKhachHang.getSelectedRow();
        if (row >= 0) {
            selectedKhachHang = kh_items.get(row);
            if (trangChu != null) {
                trangChu.setKhachHangInfo(selectedKhachHang);
            }
            dispose(); // Đóng dialog
        }
    }
            
    }//GEN-LAST:event_tabKhachHangMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KhachHangCuJDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KhachHangCuJDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KhachHangCuJDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KhachHangCuJDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                KhachHangCuJDiaLog dialog = new KhachHangCuJDiaLog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnTimKiemKH;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tabKhachHang;
    private javax.swing.JTextField txtTimKiemKH;
    // End of variables declaration//GEN-END:variables

List<KhachHang> kh_items = new ArrayList<>();
void fillTableKhachHang() {
    DefaultTableModel model = (DefaultTableModel) tabKhachHang.getModel();
    model.setRowCount(0); 
    try {
        KhachHangDao dao = new KhachHangDaoImpl();
        kh_items = dao.findAll(); // Lưu danh sách khách hàng
        for (KhachHang kh : kh_items) {
            Object[] row = {
                kh.getHoTen(),
                kh.getCmt(),
                kh.getSdt(),
                false 
            };
            model.addRow(row);
        }
    } catch (Exception e) {
        XDialog.alert("Lỗi truy vấn dữ liệu khách hàng!");
    }
}

private void timKiemKH() {
    DefaultTableModel model = (DefaultTableModel) tabKhachHang.getModel();
    model.setRowCount(0);
    try {
        KhachHangDao dao = new KhachHangDaoImpl();
        String keyword = txtTimKiemKH.getText();
        kh_items = dao.searchBySDT(keyword); // Sử dụng phương thức searchBySDT
        for (KhachHang kh : kh_items) {
            Object[] row = {
                kh.getHoTen(),
                kh.getCmt(),
                kh.getSdt(),
                false
            };
            model.addRow(row);
        }
    } catch (Exception e) {
        XDialog.alert("Lỗi truy vấn dữ liệu khách hàng!");
    }
}
}
